{"version":3,"sources":["context/index.js","components/header/index.js","components/header/header.js","components/threeInputs/view.js","proptypes/propPoint.js","constants/formObj.js","proptypes/propConf.js","constants/CIDR.js","constants/index.js","validation/frmIP.js","validation/checkIP.js","validation/checkMask.js","validation/transInBin.js","validation/calcSub.js","validation/checkSub.js","validation/pswdReqmts.js","validation/checkPsw.js","components/threeInputs/threeInputs.js","components/threeInputs/index.js","components/twoInputs/view.js","components/twoInputs/twoInputs.js","components/twoInputs/index.js","components/radio/radioView.js","components/radio/radio.js","components/radio/index.js","sections/networkSettings/networkSettings.js","sections/networkSettings/index.js","sections/ethernet/index.js","sections/ethernet/ethernet.js","components/checkbox/checkboxView.js","components/checkbox/checkbox.js","components/checkbox/index.js","components/input/inputView.js","components/input/input.js","components/input/index.js","sections/security/index.js","sections/security/security.js","wifiPoints/sort.js","wifiPoints/handlePoints.js","wifiPoints/index.js","wifiPoints/getPoints.js","components/message/index.js","components/message/message.js","components/roundButton/view.js","components/roundButton/index.js","components/roundButton/roundButton.js","components/select/selectView.js","components/select/select.js","components/select/index.js","sections/enableWiFi/index.js","sections/enableWiFi/enableWiFi.js","sections/wireless/index.js","sections/wireless/wireless.js","components/button/index.js","components/button/button.js","sections/buttons/index.js","sections/buttons/buttons.js","components/loader/index.js","components/loader/loader.js","App.js","index.js"],"names":["ConfigContext","React","createContext","Header","props","header","react_default","a","createElement","View","wifiStatus","network","ip","gtw","mask","dhcpIP","handleInputChange","ipRef","maskRef","gtwRef","inputIP","concat","inputMask","inputGtw","divClass","className","htmlFor","name","type","id","disabled","noValidate","value","onChange","ref","required","propPoint","PropTypes","shape","favorite","bool","string","security","arrayOf","strength","number","formObj","eth-ip","eth-ip-addr","eth-mask","eth-gtw","eth-dns","eth-main-dns","eth-sub-dns","wifi","point","key","wifi-ip","wifi-ip-addr","wifi-mask","wifi-gtw","wifi-dns","wifi-main-dns","wifi-sub-dns","reset","task","CIDR","255.255.255.255","255.255.255.254","255.255.255.252","255.255.255.248","255.255.255.240","255.255.255.224","255.255.255.192","255.255.255.128","255.255.255.0","255.255.254.0","255.255.252.0","255.255.248.0","255.255.240.0","255.255.224.0","255.255.192.0","255.255.128.0","255.255.0.0","255.254.0.0","255.252.0.0","255.248.0.0","255.240.0.0","255.224.0.0","255.192.0.0","255.128.0.0","255.0.0.0","254.0.0.0","252.0.0.0","248.0.0.0","240.0.0.0","224.0.0.0","192.0.0.0","128.0.0.0","0.0.0.0","linkSave","reqmts","headers","Accept","Content-Type","errIP","errMask","emptyMask","errGtw","wrongPswd","setPswd","SltMsg","ErrFetch","frmIP","octets","split","length","every","octet","parseInt","test","checkIP","checkMask","Object","keys","includes","transInBin","map","item","toString","nulls","Array","fill","toConsumableArray","join","calcSub","index","checkSub","binIP","binMask","binGate","pswdReqmts","pswd","rule","checkPsw","psw","ThreeInputs","state","createRef","event","target","_this","setState","defineProperty","_this$props","this","config","_this$state","current","setCustomValidity","_this$props2","_this$state2","view","nextProps","prevState","PureComponent","context","Consumer","threeInputs_ThreeInputs","assign","main","sub","dhcpDNS","mainRef","subRef","inputMain","inputSub","status","TwoInputs","twoInputs_view","twoInputs_TwoInputs","RadioView","purpose","handleChange","radioOne","radioTwo","inputDHCP","inputStat","inputName","checked","Radio","setDHCP","radioView","defaultProps","radio_Radio","NetworkSettings","setIPdhcp","setDNSdhcp","components_radio","components_threeInputs","dhcp","components_twoInputs","Ethernet","components_header","sections_networkSettings","Component","CheckboxView","handleCheckboxChange","description","labelClass","Checkbox","setStatus","checkboxView","checkbox_Checkbox","InputView","securityStatus","inputRef","autoComplete","Input","inputView","pass","input_Input","Security","sec","setSec","components_checkbox","components_input","byStrength","b","handlePoints","arr","filter","usual","sort","getPoints","Promise","resolve","reject","fetch","then","response","json","data","catch","error","message","console","log","Message","handleAnimation","onAnimationEnd","handleMessage","react","components_message","onClick","RoundButton","_useState","useState","_useState2","slicedToArray","setMessage","roundButton_view","SelectView","arrowClass","valueSlt","slt","liClass","points","components_roundButton","Select","firstLoad","savePoint","array","push","selectView","select_Select","EnableWiFi","components_select","Wireless","setStatusWiFi","sections_enableWiFi","sections_security","Button","text","handleCancel","btnClass","toLowerCase","form","Buttons","components_button","Loader","App","handleSubmit","_event$target","obj","sentObj","FormData","preventDefault","forEach","body","JSON","stringify","objectSpread","saveConfig","method","res","err","saveSltPoint","_this2","result","url","Provider","onSubmit","components_loader","sections_ethernet","sections_wireless","sections_buttons","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.88f94b52.chunk.js","sourcesContent":["import React from 'react';\n\nconst ConfigContext = React.createContext();\n\nexport default ConfigContext;\n","import Header from './header';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './header.css';\n\nconst Header = (props) => {\n  const { header } = props;\n  return (\n    <h1>{header}</h1>\n  );\n};\n\nHeader.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './threeInputs.css';\n\nconst View = (props) => {\n  const {\n    wifiStatus, network, ip,\n    gtw, mask, dhcpIP,\n    handleInputChange, ipRef,\n    maskRef, gtwRef,\n  } = props;\n  const inputIP = `${network}-ip-addr`;\n  const inputMask = `${network}-mask`;\n  const inputGtw = `${network}-gtw`;\n  const divClass = `input-text opacity-${(dhcpIP || !wifiStatus)}`;\n  return (\n    <div className={divClass}>\n      <label htmlFor={inputIP}>\n        <span className=\"name-field\">\n          IP address:\n          &nbsp;\n          <span className=\"asterisk\">*</span>\n        </span>\n        <input\n          name={inputIP}\n          type=\"text\"\n          id={inputIP}\n          disabled={(dhcpIP || !wifiStatus)}\n          noValidate={(dhcpIP || !wifiStatus)}\n          value={ip}\n          onChange={handleInputChange}\n          ref={ipRef}\n          required\n        />\n      </label>\n      <label htmlFor={inputMask}>\n        <span className=\"name-field\">\n          Subnet Mask:\n          &nbsp;\n          <span className=\"asterisk\">*</span>\n        </span>\n        <input\n          name={inputMask}\n          type=\"text\"\n          id={inputMask}\n          disabled={(dhcpIP || !wifiStatus)}\n          noValidate={(dhcpIP || !wifiStatus)}\n          value={mask}\n          onChange={handleInputChange}\n          ref={maskRef}\n          required\n        />\n      </label>\n      <label htmlFor={inputGtw}>\n        <span className=\"name-field\">\n          Default gateway:\n        </span>\n        <input\n          name={inputGtw}\n          type=\"text\"\n          id={inputGtw}\n          disabled={(dhcpIP || !wifiStatus)}\n          noValidate={(dhcpIP || !wifiStatus)}\n          value={gtw}\n          onChange={handleInputChange}\n          ref={gtwRef}\n        />\n      </label>\n    </div>\n  );\n};\n\nView.propTypes = {\n  network: PropTypes.oneOf(['eth', 'wifi']).isRequired,\n  ip: PropTypes.string.isRequired,\n  mask: PropTypes.string.isRequired,\n  gtw: PropTypes.string.isRequired,\n  dhcpIP: PropTypes.bool.isRequired,\n  wifiStatus: PropTypes.bool.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  ipRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) }).isRequired,\n  maskRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) }).isRequired,\n  gtwRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) }).isRequired,\n};\n\nexport default View;\n","import PropTypes from 'prop-types';\n\nconst propPoint = PropTypes.shape({\n  favorite: PropTypes.bool,\n  name: PropTypes.string,\n  security: PropTypes.arrayOf(PropTypes.string),\n  strength: PropTypes.number,\n});\n\nexport default propPoint;\n","const formObj = {\n  task: 'labinvent',\n  'eth-ip': 'dhcp',\n  'eth-ip-addr': '',\n  'eth-mask': '',\n  'eth-gtw': '',\n  'eth-dns': 'dhcp',\n  'eth-main-dns': '',\n  'eth-sub-dns': '',\n  wifi: false,\n  point: {\n    favorite: false,\n    name: '',\n    strength: 0,\n    security: [''],\n  },\n  security: false,\n  key: '',\n  'wifi-ip': 'dhcp',\n  'wifi-ip-addr': '',\n  'wifi-mask': '',\n  'wifi-gtw': '',\n  'wifi-dns': 'dhcp',\n  'wifi-main-dns': '',\n  'wifi-sub-dns': '',\n};\n\nexport default formObj;\n","import PropTypes from 'prop-types';\nimport propPoint from './propPoint';\n\nconst propConf = PropTypes.shape({\n  'eth-ip': PropTypes.string,\n  'eth-ip-addr': PropTypes.string,\n  'eth-mask': PropTypes.string,\n  'eth-gtw': PropTypes.string,\n  'eth-dns': PropTypes.string,\n  'eth-main-dns': PropTypes.string,\n  'eth-sub-dns': PropTypes.string,\n  wifi: PropTypes.bool,\n  point: propPoint,\n  security: PropTypes.bool,\n  key: PropTypes.string,\n  'wifi-ip': PropTypes.string,\n  'wifi-ip-addr': PropTypes.string,\n  'wifi-mask': PropTypes.string,\n  'wifi-gtw': PropTypes.string,\n  'wifi-dns': PropTypes.string,\n  'wifi-main-dns': PropTypes.string,\n  'wifi-sub-dns': PropTypes.string,\n  reset: PropTypes.bool,\n});\n\nexport default propConf;\n","const CIDR = {\n  '255.255.255.255': 32,\n  '255.255.255.254': 31,\n  '255.255.255.252': 30,\n  '255.255.255.248': 29,\n  '255.255.255.240': 28,\n  '255.255.255.224': 27,\n  '255.255.255.192': 26,\n  '255.255.255.128': 25,\n  '255.255.255.0': 24,\n  '255.255.254.0': 23,\n  '255.255.252.0': 22,\n  '255.255.248.0': 21,\n  '255.255.240.0': 20,\n  '255.255.224.0': 19,\n  '255.255.192.0': 18,\n  '255.255.128.0': 17,\n  '255.255.0.0': 16,\n  '255.254.0.0': 15,\n  '255.252.0.0': 14,\n  '255.248.0.0': 13,\n  '255.240.0.0': 12,\n  '255.224.0.0': 11,\n  '255.192.0.0': 10,\n  '255.128.0.0': 9,\n  '255.0.0.0': 8,\n  '254.0.0.0': 7,\n  '252.0.0.0': 6,\n  '248.0.0.0': 5,\n  '240.0.0.0': 4,\n  '224.0.0.0': 3,\n  '192.0.0.0': 2,\n  '128.0.0.0': 1,\n  '0.0.0.0': 0,\n};\n\nexport default CIDR;\n","import formObj from './formObj';\nimport CIDR from './CIDR';\n\nexport { formObj, CIDR };\nexport const amountOctestsInIPv4 = 4;\nexport const linkSave = 'https://labinvent.herokuapp.com/form';\nexport const ethH = 'Ethernet Settings';\nexport const wifiH = 'Wireless Settings';\nexport const radioOne = 'Obtain an IP address automatically (DHCP/BootP)';\nexport const radioTwo = 'Use the following IP address:';\nexport const radioThree = 'Obtain DNS server address automatically';\nexport const radioFour = 'Use the following DNS server address:';\nexport const enableWiFi = 'Enable wifi:';\nexport const enableSec = 'Enable Wireless Security:';\n\nexport const reqmts = [/[a-z]/, /[A-Z]/, /\\d/, /[!@#$&*]/];\n\nexport const headers = {\n  Accept: 'application/json, text/plain, */*',\n  'Content-Type': 'application/json',\n};\n\nexport const errIP = {\n  'en-EN': 'This is an incorrect IP-address',\n  'ru-RU': 'Вы ввели некорректный IP-адрес',\n};\nexport const errMask = {\n  'en-EN': 'You filled in an incorrect mask',\n  'ru-RU': 'Вы ввели некорректную маску',\n};\nexport const emptyMask = {\n  'en-EN': 'You have to filled in a mask',\n  'ru-RU': 'Вы должны ввести маску',\n};\nexport const errGtw = {\n  'en-EN': 'Gateway and host aren\\'t in the same subnet',\n  'ru-RU': 'Шлюз и хост не в одной подсети',\n};\nexport const errSel = {\n  'en-EN': 'Select wireless network',\n  'ru-RU': 'Выберите беспроводную сеть',\n};\nexport const wrongPswd = {\n  'en-EN': 'Password does not meet the requirements',\n  'ru-RU': 'Пароль не соответствует требованиям',\n};\nexport const setPswd = {\n  'en-EN': 'You have to set a password',\n  'ru-RU': 'Вы должны ввести пароль',\n};\nexport const MsgSearchWiFi = 'Searching access points';\nexport const SltMsg = 'Please select';\n\n\nexport const WifiPoints = 'https://labinvent.herokuapp.com/ponts';\n\nexport const ErrFetch = 'There has been a problem with fetch. Try again.';\n","import { amountOctestsInIPv4 } from '../constants';\n\nconst frmIP = (ip) => {\n  const octets = ip.split('.');\n  if (octets.length === amountOctestsInIPv4) {\n    return octets.every(octet => (\n      parseInt(octet, 10) >= 0\n      && parseInt(octet, 10) <= 255\n      && !/\\D/.test(octet)\n      && !(octet[0] === '0' && octet.length > 1)\n    ));\n  }\n  return false;\n};\n\nexport default frmIP;\n","import { errIP } from '../constants';\nimport frmIP from './frmIP';\n\nconst checkIP = (ip, required) => {\n  if (!ip && required) return 'You have to fill this field';\n  if (frmIP(ip) || !ip) return '';\n  return errIP['en-EN'];\n};\n\nexport default checkIP;\n","import { errMask, emptyMask, CIDR } from '../constants';\n\nconst checkMask = (mask) => {\n  if (Object.keys(CIDR).includes(mask)) return '';\n  if (!mask) return emptyMask['en-EN'];\n  return errMask['en-EN'];\n};\n\nexport default checkMask;\n","const transInBin = (ip) => {\n  const binOctets = ip.split('.').map(item => parseInt(item, 10).toString(2));\n  const arrayBits = binOctets.toString().split(',');\n  const arrayBites = arrayBits.map((item) => {\n    const nulls = Array(8 - item.length).fill('0');\n    return [...nulls, ...item].join('');\n  });\n  return arrayBites.join('').split('');\n};\n\nexport default transInBin;\n","const calcSub = (ip, mask) => (\n  ip.map((item, index) => (item * mask[index])).join('')\n);\n\nexport default calcSub;\n","import transInBin from './transInBin';\nimport { errGtw } from '../constants';\nimport calcSub from './calcSub';\n\nconst checkSub = (ip, mask, gtw) => {\n  const binIP = transInBin(ip);\n  const binMask = transInBin(mask);\n  const binGate = transInBin(gtw);\n  const subIP = calcSub(binIP, binMask);\n  const subGate = calcSub(binGate, binMask);\n  if (subIP === subGate) return '';\n  return errGtw['en-EN'];\n};\n\nexport default checkSub;\n","import { reqmts } from '../constants';\n\nconst pswdReqmts = (pswd) => {\n  if (pswd.length < 8) return false;\n  return reqmts.every(rule => rule.test(pswd));\n};\n\nexport default pswdReqmts;\n","import { wrongPswd, setPswd } from '../constants';\nimport pswdReqmts from './pswdReqmts';\n\nconst checkPsw = (psw) => {  \n  if (!psw) return setPswd['en-EN'];\n  if (pswdReqmts(psw)) return '';\n  return wrongPswd['en-EN'];\n};\n\nexport default checkPsw;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport View from './view';\nimport ConfigContext from '../../context';\nimport { propConf } from '../../proptypes';\nimport { checkIP, checkMask, checkSub } from '../../validation';\nimport './threeInputs.css';\n\nclass ThreeInputs extends PureComponent {\n  state = {\n    ip: '',\n    mask: '',\n    gtw: '',\n    reset: false,\n  }\n\n  ipRef = React.createRef();\n\n  maskRef = React.createRef();\n\n  gtwRef = React.createRef();\n\n  componentDidMount() {\n    const { network, config } = this.props;\n    this.setState({\n      ip: config[`${network}-ip-addr`],\n      mask: config[`${network}-mask`],\n      gtw: config[`${network}-gtw`],\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { network, config } = nextProps;\n    if (nextProps.config.reset !== prevState.reset) {\n      return {\n        ip: config[`${network}-ip-addr`],\n        mask: config[`${network}-mask`],\n        gtw: config[`${network}-gtw`],\n        reset: config.reset,\n      };\n    }\n    return null;\n  }\n\n  componentDidUpdate() {\n    const { ip, gtw, mask } = this.state;\n    this.ipRef.current.setCustomValidity(checkIP(ip, true));\n    this.maskRef.current.setCustomValidity(checkMask(mask));\n    this.gtwRef.current.setCustomValidity(checkIP(gtw, false));\n    if (!checkIP(gtw) && gtw) this.gtwRef.current.setCustomValidity(checkSub(ip, mask, gtw));\n  }\n\n  handleInputChange = (event) => {\n    const { target } = event;\n    const { value } = target;\n    const { name } = target;\n    const key = name.split('-')[1];\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  render() {\n    const { network, dhcpIP, wifiStatus } = this.props;\n    const { ip, mask, gtw } = this.state;\n    return (\n      <View\n        network={network}\n        ip={ip}\n        mask={mask}\n        gtw={gtw}\n        dhcpIP={dhcpIP}\n        wifiStatus={wifiStatus}\n        handleInputChange={this.handleInputChange}\n        ipRef={this.ipRef}\n        maskRef={this.maskRef}\n        gtwRef={this.gtwRef}\n      />\n    );\n  }\n}\n\nThreeInputs.propTypes = {\n  network: PropTypes.oneOf(['eth', 'wifi']).isRequired,\n  dhcpIP: PropTypes.bool.isRequired,\n  wifiStatus: PropTypes.bool.isRequired,\n  config: propConf.isRequired,\n};\n\nexport default props => (\n  <ConfigContext.Consumer>\n    {config => <ThreeInputs {...props} config={config} />}\n  </ConfigContext.Consumer>\n);\n","import ThreeInputs from './threeInputs';\n\nexport default ThreeInputs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst View = (props) => {\n  const {\n    wifiStatus, network,\n    main, sub, dhcpDNS,\n    handleInputChange,\n    mainRef, subRef,\n  } = props;\n  const inputMain = `${network}-main-dns`;\n  const inputSub = `${network}-sub-dns`;\n  const status = (dhcpDNS || !wifiStatus);\n  const divClass = `input-text opacity-${status}`;\n  return (\n    <div className={divClass}>\n      <label htmlFor={inputMain}>\n        <span className=\"name-field\">\n          Prefered DNS server:\n          &nbsp;\n          <span className=\"asterisk\">*</span>\n        </span>\n        <input\n          name={inputMain}\n          type=\"text\"\n          id={inputMain}\n          disabled={status}\n          noValidate={status}\n          value={main}\n          onChange={handleInputChange}\n          ref={mainRef}\n          required\n        />\n      </label>\n      <label htmlFor={inputSub}>\n        <span className=\"name-field\">\n          Alternative DNS server:\n        </span>\n        <input\n          name={inputSub}\n          type=\"text\"\n          id={inputSub}\n          disabled={status}\n          noValidate={status}\n          value={sub}\n          onChange={handleInputChange}\n          ref={subRef}\n        />\n      </label>\n    </div>\n  );\n};\n\nView.propTypes = {\n  network: PropTypes.oneOf(['eth', 'wifi']).isRequired,\n  main: PropTypes.string.isRequired,\n  sub: PropTypes.string.isRequired,\n  dhcpDNS: PropTypes.bool.isRequired,\n  wifiStatus: PropTypes.bool.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  mainRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) }).isRequired,\n  subRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) }).isRequired,\n};\n\nexport default View;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport View from './view';\nimport { propConf } from '../../proptypes';\nimport ConfigContext from '../../context';\nimport { checkIP } from '../../validation';\n\nclass TwoInputs extends PureComponent {\n  state = {\n    main: '',\n    sub: '',\n    reset: false,\n  }\n\n  mainRef = React.createRef();\n\n  subRef = React.createRef();\n\n  componentDidMount() {\n    const { network, config } = this.props;\n    this.setState({\n      main: config[`${network}-main-dns`],\n      sub: config[`${network}-sub-dns`],\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { network, config } = nextProps;\n    if (nextProps.config.reset !== prevState.reset) {\n      return {\n        main: config[`${network}-main-dns`],\n        sub: config[`${network}-sub-dns`],\n        reset: config.reset,\n      };\n    }\n    return null;\n  }\n\n  componentDidUpdate() {\n    const { main, sub } = this.state;\n    this.mainRef.current.setCustomValidity(checkIP(main));\n    this.subRef.current.setCustomValidity(checkIP(sub));\n  }\n\n  handleInputChange = (event) => {\n    const { target } = event;\n    const { value } = target;\n    const { name } = target;\n    const key = name.split('-')[1];\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  render() {\n    const { network, wifiStatus, dhcpDNS } = this.props;\n    const { main, sub } = this.state;\n    return (\n      <View\n        network={network}\n        main={main}\n        sub={sub}\n        dhcpDNS={dhcpDNS}\n        wifiStatus={wifiStatus}\n        handleInputChange={this.handleInputChange}\n        mainRef={this.mainRef}\n        subRef={this.subRef}\n      />\n    );\n  }\n}\n\nTwoInputs.propTypes = {\n  network: PropTypes.oneOf(['eth', 'wifi']).isRequired,\n  wifiStatus: PropTypes.bool.isRequired,\n  dhcpDNS: PropTypes.bool.isRequired,\n  config: propConf.isRequired,\n};\n\nexport default props => (\n  <ConfigContext.Consumer>\n    {config => <TwoInputs {...props} config={config} />}\n  </ConfigContext.Consumer>\n);\n","import TwoInputs from './twoInputs';\n\nexport default TwoInputs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './radio.css';\n\nconst RadioView = (props) => {\n  const {\n    wifiStatus, purpose, network,\n    handleChange, value,\n    radioOne, radioTwo,\n  } = props;\n  const inputDHCP = `${network}-${purpose}-dhcp`;\n  const inputStat = `${network}-${purpose}-static`;\n  const inputName = `${network}-${purpose}`;\n  const divClass = `radiobuttons opacity-${!wifiStatus}`;\n  return (\n    <div className={divClass}>\n      <label htmlFor={inputDHCP}>\n        <input\n          type=\"radio\"\n          value=\"dhcp\"\n          id={inputDHCP}\n          name={inputName}\n          disabled={!wifiStatus}\n          checked={value === 'dhcp'}\n          onChange={handleChange}\n        />\n        <span>{radioOne}</span>\n      </label>\n      <label htmlFor={inputStat}>\n        <input\n          type=\"radio\"\n          value=\"static\"\n          id={inputStat}\n          name={inputName}\n          disabled={!wifiStatus}\n          checked={value === 'static'}\n          onChange={handleChange}\n        />\n        <span>{radioTwo}</span>\n      </label>\n    </div>\n  );\n};\n\nRadioView.propTypes = {\n  radioOne: PropTypes.string.isRequired,\n  radioTwo: PropTypes.string.isRequired,\n  network: PropTypes.oneOf(['eth', 'wifi']).isRequired,\n  purpose: PropTypes.oneOf(['ip', 'dns']).isRequired,\n  value: PropTypes.oneOf(['dhcp', 'static']).isRequired,\n  handleChange: PropTypes.func.isRequired,\n  wifiStatus: PropTypes.bool.isRequired,\n};\n\nexport default RadioView;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { propConf } from '../../proptypes';\nimport ConfigContext from '../../context';\nimport RadioView from './radioView';\n\nclass Radio extends PureComponent {\n  state = {\n    value: 'dhcp',\n    reset: false,\n  }\n\n  componentDidMount() {\n    const { purpose, config, network } = this.props;\n    const value = config[`${network}-${purpose}`];\n    this.setState({\n      value,\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      config, purpose, network,\n    } = nextProps;\n    const value = config[`${network}-${purpose}`];\n    if (nextProps.config.reset !== prevState.reset) {\n      return {\n        value,\n        reset: config.reset,\n      };\n    }\n    return null;\n  }\n\n  componentDidUpdate() {\n    const { setDHCP } = this.props;\n    const { value } = this.state;\n    if (value === 'dhcp') setDHCP(true);\n    else setDHCP(false);\n  }\n\n  handleChange = (event) => {\n    const { target } = event;\n    const { value } = target;\n    this.setState({\n      value,\n    });\n  }\n\n  render() {\n    const {\n      radioOne, radioTwo, network, purpose, wifiStatus,\n    } = this.props;\n    const { value } = this.state;\n    return (\n      <RadioView\n        value={value}\n        radioOne={radioOne}\n        radioTwo={radioTwo}\n        network={network}\n        purpose={purpose}\n        handleChange={this.handleChange}\n        wifiStatus={wifiStatus}\n      />\n    );\n  }\n}\n\nRadio.defaultProps = {\n  purpose: 'ip',\n};\n\nRadio.propTypes = {\n  radioOne: PropTypes.string.isRequired,\n  radioTwo: PropTypes.string.isRequired,\n  network: PropTypes.oneOf(['eth', 'wifi']).isRequired,\n  purpose: PropTypes.oneOf(['ip', 'dns']),\n  wifiStatus: PropTypes.bool.isRequired,\n  setDHCP: PropTypes.func.isRequired,\n  config: propConf.isRequired,\n};\n\nexport default props => (\n  <ConfigContext.Consumer>\n    {config => <Radio {...props} config={config} />}\n  </ConfigContext.Consumer>\n);\n","import Radio from './radio';\n\nexport default Radio;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ThreeInputs from '../../components/threeInputs';\nimport TwoInputs from '../../components/twoInputs';\nimport Radio from '../../components/radio';\nimport {\n  radioOne, radioTwo, radioThree, radioFour,\n} from '../../constants';\n\nconst NetworkSettings = (props) => {\n  const {\n    network, wifiStatus, dhcpIP, dhcpDNS, setIPdhcp, setDNSdhcp,\n  } = props;\n  return (\n    <div className=\"networkSettings\">\n      <Radio\n        radioOne={radioOne}\n        radioTwo={radioTwo}\n        network={network}\n        wifiStatus={wifiStatus}\n        setDHCP={setIPdhcp}\n      />\n      <ThreeInputs\n        network={network}\n        dhcp={false}\n        wifiStatus={wifiStatus}\n        dhcpIP={dhcpIP}\n      />\n      <Radio\n        radioOne={radioThree}\n        radioTwo={radioFour}\n        network={network}\n        purpose=\"dns\"\n        wifiStatus={wifiStatus}\n        setDHCP={setDNSdhcp}\n      />\n      <TwoInputs\n        network={network}\n        dhcp={false}\n        wifiStatus={wifiStatus}\n        dhcpDNS={dhcpDNS}\n      />\n    </div>\n  );\n};\n\nNetworkSettings.defaultProps = {\n  network: 'eth',\n  wifiStatus: true,\n};\n\nNetworkSettings.propTypes = {\n  network: PropTypes.string,\n  wifiStatus: PropTypes.bool,\n  dhcpIP: PropTypes.bool.isRequired,\n  dhcpDNS: PropTypes.bool.isRequired,\n  setIPdhcp: PropTypes.func.isRequired,\n  setDNSdhcp: PropTypes.func.isRequired,\n};\n\nexport default NetworkSettings;\n","import NetworkSettings from './networkSettings';\n\nexport default NetworkSettings;\n","import Ethernet from './ethernet';\n\nexport default Ethernet;\n","import React, { Component } from 'react';\nimport Header from '../../components/header';\nimport NetworkSettings from '../networkSettings';\nimport { ethH } from '../../constants';\nimport './ethernet.css';\n\nclass Ethernet extends Component {\n  state = {\n    dhcpIP: true,\n    dhcpDNS: true,\n  }\n\n  setIPdhcp = (dhcpIP) => {\n    this.setState({\n      dhcpIP,\n    });\n  }\n\n  setDNSdhcp = (dhcpDNS) => {\n    this.setState({\n      dhcpDNS,\n    });\n  }\n\n  render() {\n    const { dhcpIP, dhcpDNS } = this.state;\n    return (\n      <div className=\"ethernet\">\n        <Header header={ethH} />\n        <NetworkSettings\n          dhcpIP={dhcpIP}\n          dhcpDNS={dhcpDNS}\n          setIPdhcp={this.setIPdhcp}\n          setDNSdhcp={this.setDNSdhcp}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Ethernet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './checkbox.css';\n\nconst CheckboxView = (props) => {\n  const {\n    wifiStatus, purpose,\n    handleCheckboxChange, status, description,\n  } = props;\n  const labelClass = `opacity-${!wifiStatus}`;\n  return (\n    <label htmlFor={purpose} className={labelClass}>\n      <input\n        type=\"checkbox\"\n        id={purpose}\n        disabled={!wifiStatus}\n        onChange={handleCheckboxChange}\n        checked={status}\n        name={purpose}\n        value={status}\n      />\n      <span>{description}</span>\n    </label>\n  );\n};\n\nCheckboxView.propTypes = {\n  description: PropTypes.string.isRequired,\n  purpose: PropTypes.oneOf(['security', 'wifi']).isRequired,\n  wifiStatus: PropTypes.bool.isRequired,\n  handleCheckboxChange: PropTypes.func.isRequired,\n  status: PropTypes.bool.isRequired,\n};\n\nexport default CheckboxView;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { propConf } from '../../proptypes';\nimport ConfigContext from '../../context';\nimport CheckboxView from './checkboxView';\n\nclass Checkbox extends Component {\n  state = {\n    status: false,\n    reset: false,\n  }\n\n  componentDidMount() {\n    const { purpose, config, setStatus } = this.props;\n    setStatus(config[`${purpose}`]);\n    this.setState({\n      status: config[`${purpose}`],\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { config, purpose, setStatus } = nextProps;\n    if (nextProps.config.reset !== prevState.reset) {\n      setStatus(config[`${purpose}`]);\n      return {\n        status: config[`${purpose}`],\n        reset: config.reset,\n      };\n    }\n    return null;\n  }\n\n  handleCheckboxChange = (event) => {\n    const { target } = event;\n    const { setStatus } = this.props;\n    setStatus(target.checked);\n    this.setState({\n      status: target.checked,\n    });\n  }\n\n  render() {\n    const { description, purpose, wifiStatus } = this.props;\n    const { status } = this.state;\n    return (\n      <CheckboxView\n        description={description}\n        purpose={purpose}\n        wifiStatus={wifiStatus}\n        status={status}\n        handleCheckboxChange={this.handleCheckboxChange}\n      />\n    );\n  }\n}\n\nCheckbox.defaultProps = {\n  wifiStatus: true,\n  purpose: 'wifi',\n};\n\nCheckbox.propTypes = {\n  description: PropTypes.string.isRequired,\n  purpose: PropTypes.oneOf(['security', 'wifi']),\n  wifiStatus: PropTypes.bool,\n  setStatus: PropTypes.func.isRequired,\n  config: propConf.isRequired,\n};\n\nexport default props => (\n  <ConfigContext.Consumer>\n    {config => <Checkbox {...props} config={config} />}\n  </ConfigContext.Consumer>\n);\n","import Checkbox from './checkbox';\n\nexport default Checkbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './input.css';\n\nconst InputView = (props) => {\n  const {\n    wifiStatus, securityStatus,\n    handleInputChange, pswd, inputRef,\n  } = props;\n  const status = !securityStatus || !wifiStatus;\n  const divClass = `input-text opacity-${status}`;\n  return (\n    <div className={divClass}>\n      <label htmlFor=\"securityKey\">\n        <span className=\"name-field\">\n          Security Key:\n          &nbsp;\n          <span className=\"asterisk\">*</span>\n        </span>\n        <input\n          name=\"key\"\n          type=\"password\"\n          id=\"securityKey\"\n          disabled={status}\n          noValidate={status}\n          value={pswd}\n          onChange={handleInputChange}\n          autoComplete=\"off\"\n          ref={inputRef}\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nInputView.propTypes = {\n  pswd: PropTypes.string.isRequired,\n  securityStatus: PropTypes.bool.isRequired,\n  wifiStatus: PropTypes.bool.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  inputRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) }).isRequired,\n};\n\nexport default InputView;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { propConf } from '../../proptypes';\nimport ConfigContext from '../../context';\nimport InputView from './inputView';\nimport { checkPsw } from '../../validation';\n\nclass Input extends PureComponent {\n  state = {\n    pswd: '',\n    reset: false,\n  }\n\n  inputRef = React.createRef();\n\n  componentDidMount() {\n    const { config } = this.props;\n    const { key } = config;\n    this.setState({\n      pswd: key,\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { config } = nextProps;\n    const { key } = config;\n    if (nextProps.config.reset !== prevState.reset) {\n      return {\n        pass: key,\n        reset: config.reset,\n      };\n    }\n    return null;\n  }\n\n  componentDidUpdate() {\n    const { pswd } = this.state;\n    this.inputRef.current.setCustomValidity(checkPsw(pswd));\n  }\n\n  handleInputChange = (event) => {\n    const { target } = event;\n    const { value } = target;\n    this.setState({\n      pswd: value,\n    });\n  }\n\n  render() {\n    const { securityStatus, wifiStatus } = this.props;\n    const { pswd } = this.state;\n    return (\n      <InputView\n        securityStatus={securityStatus}\n        wifiStatus={wifiStatus}\n        pswd={pswd}\n        handleInputChange={this.handleInputChange}\n        inputRef={this.inputRef}\n      />\n    );\n  }\n}\n\nInput.propTypes = {\n  securityStatus: PropTypes.bool.isRequired,\n  wifiStatus: PropTypes.bool.isRequired,\n  config: propConf.isRequired,\n};\n\nexport default props => (\n  <ConfigContext.Consumer>\n    {config => <Input {...props} config={config} />}\n  </ConfigContext.Consumer>\n);\n","import Input from './input';\n\nexport default Input;\n","import Security from './security';\n\nexport default Security;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Checkbox from '../../components/checkbox';\nimport Input from '../../components/input';\nimport { enableSec } from '../../constants';\n\nclass Security extends Component {\n  state = {\n    sec: false,\n  }\n\n  setSec = (sec) => {\n    this.setState({\n      sec,\n    });\n  }\n\n  render() {\n    const { sec } = this.state;\n    const { wifiStatus } = this.props;\n    return (\n      <div className=\"security\">\n        <Checkbox\n          description={enableSec}\n          purpose=\"security\"\n          setStatus={this.setSec}\n          wifiStatus={wifiStatus}\n        />\n        <Input\n          securityStatus={sec}\n          wifiStatus={wifiStatus}\n        />\n      </div>\n    );\n  }\n}\n\nSecurity.propTypes = {\n  wifiStatus: PropTypes.bool.isRequired,\n};\n\nexport default Security;\n","const byStrength = (a, b) => (b.strength - a.strength);\n\nexport default byStrength;\n","import byStrength from './sort';\n\nconst handlePoints = (arr) => {\n  const favorite = arr.filter(item => item.favorite);\n  const usual = arr.filter(item => !item.favorite);\n  favorite.sort(byStrength);\n  usual.sort(byStrength);\n  return [...favorite, ...usual];\n};\n\nexport default handlePoints;\n","import getPoints from './getPoints';\n\nexport default getPoints;\n","import handlePoints from './handlePoints';\nimport { WifiPoints, ErrFetch } from '../constants';\n\nconst getPoints = () => new Promise((resolve, reject) => {\n  fetch(WifiPoints)\n    .then(response => response.json())\n    .then(data => resolve(handlePoints(data)))\n    .catch((error) => {\n      const { message } = error;\n      console.log(`${ErrFetch}${message}`);\n      reject(message);\n    });\n});\n\nexport default getPoints;\n","import Message from './message';\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ErrFetch, MsgSearchWiFi } from '../../constants';\nimport './message.css';\n\nconst Message = (props) => {\n  const { message, handleAnimation } = props;\n  let divClass;\n  switch (message) {\n    case MsgSearchWiFi:\n      divClass = 'message search';\n      break;\n    case 'Form was send incorrectly. Try again.':\n      divClass = 'message err-submit';\n      break;\n    case 'You need to select access point':\n      divClass = 'message point';\n      break;\n    case `${ErrFetch}`:\n      divClass = 'message err-fetch';\n      break;\n    default:\n      divClass = 'message';\n  }\n  return (\n    <div\n      className={divClass}\n      onAnimationEnd={handleAnimation}\n    >\n      {message}\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n  handleAnimation: PropTypes.func.isRequired,\n};\n\nexport default Message;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Message from '../message';\nimport { MsgSearchWiFi } from '../../constants';\n\nconst View = (props) => {\n  const {\n    wifiStatus, handleMessage,\n    handleAnimation, handlePoints,\n    message,\n  } = props;\n  return (\n    <Fragment>\n      { message && (\n        <Message\n          message={message}\n          handleAnimation={handleAnimation}\n        />\n      )}\n      <button\n        type=\"button\"\n        className=\"round\"\n        onClick={() => { handlePoints(); handleMessage(); }}\n        disabled={!wifiStatus}\n      >\n        <div className=\"arrow-round\" />\n      </button>\n    </Fragment>\n  );\n};\n\nView.propTypes = {\n  wifiStatus: PropTypes.bool.isRequired,\n  handlePoints: PropTypes.func.isRequired,\n  handleAnimation: PropTypes.func.isRequired,\n  handleMessage: PropTypes.func.isRequired,\n  message: PropTypes.oneOf(['', MsgSearchWiFi]).isRequired,\n};\n\nexport default View;\n","import RoundButton from './roundButton';\n\nexport default RoundButton;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport View from './view';\nimport { MsgSearchWiFi } from '../../constants';\nimport './roundButton.css';\n\nconst RoundButton = (props) => {\n  const { wifiStatus, handlePoints } = props;\n  const [message, setMessage] = useState('');\n\n  const handleAnimation = () => {\n    setMessage('');\n  };\n\n  const handleMessage = () => {\n    setMessage(MsgSearchWiFi);\n  };\n\n  return (\n    <View\n      handlePoints={handlePoints}\n      handleAnimation={handleAnimation}\n      handleMessage={handleMessage}\n      message={message}\n      wifiStatus={wifiStatus}\n    />\n  );\n};\n\nRoundButton.propTypes = {\n  wifiStatus: PropTypes.bool.isRequired,\n  handlePoints: PropTypes.func.isRequired,\n};\n\nexport default RoundButton;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { propPoint } from '../../proptypes';\nimport RoundButton from '../roundButton';\nimport Message from '../message';\nimport { ErrFetch } from '../../constants';\nimport './select.css';\n\nconst SelectView = (props) => {\n  const {\n    wifiStatus, arrowClass, message,\n    handleAnimation, valueSlt, slt,\n    handleChange, liClass, points, handlePoints,\n  } = props;  \n  const divClass = `dropdown opacity-${!wifiStatus}`;\n  return (\n    <Fragment>\n      <div className={arrowClass} />\n      {message && (\n        <Message\n          message={message}\n          handleAnimation={handleAnimation}\n        />\n      )}\n      <div className={divClass}>\n        <span className=\"name-field\">\n          Wireless Network Name:\n          <span className=\"asterisk\">*</span>\n        </span>\n        <ul className=\"select\">\n          <span className=\"select_label select_label-placeholder\">{valueSlt}</span>\n          <input\n            className=\"select_close\"\n            type=\"radio\"\n            name=\"point\"\n            id=\"closer\"\n            value=\"closer\"\n            disabled={!wifiStatus}\n            checked={slt === 'closer'}\n            onChange={handleChange}\n          />\n          <li className={liClass}>\n            <input\n              className=\"select_expand\"\n              value=\"opener\"\n              type=\"radio\"\n              name=\"point\"\n              id=\"opener\"\n              disabled={!wifiStatus}\n              checked={slt === 'opener'}\n              onChange={handleChange}\n            />\n            <label className=\"select_closeLabel\" htmlFor=\"closer\"></label>\n            <ul className=\"select_options\">\n              {points.length !== 0 && points.map(item => (\n                <li className=\"select_option\" key={item.name}>\n                  <input\n                    className=\"select_input\"\n                    value={item.name}\n                    type=\"radio\"\n                    name=\"point\"\n                    id={item.name}\n                    onChange={handleChange}\n                    checked={slt === item.name}\n                  />\n                  <label className=\"select_label\" htmlFor={item.name}>{item.name}</label>\n                </li>\n              ))}\n            </ul>\n            <label className=\"select_expandLabel\" htmlFor=\"opener\"></label>\n          </li>\n        </ul>\n      </div>\n      <RoundButton wifiStatus={wifiStatus} handlePoints={handlePoints} />\n    </Fragment>\n  );\n};\n\nSelectView.propTypes = {\n  slt: PropTypes.string.isRequired,\n  valueSlt: PropTypes.string.isRequired,\n  arrowClass: PropTypes.oneOf(['arrow', 'arrow up', 'arrow down']).isRequired,\n  liClass: PropTypes.oneOf(['select_items violet', 'select_items']).isRequired,\n  message: PropTypes.oneOf(['', ErrFetch]).isRequired,\n  wifiStatus: PropTypes.bool.isRequired,\n  handlePoints: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleAnimation: PropTypes.func.isRequired,\n  points: PropTypes.arrayOf(propPoint).isRequired,\n};\n\nexport default SelectView;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { propConf } from '../../proptypes';\nimport ConfigContext from '../../context';\nimport getPoints from '../../wifiPoints';\nimport SelectView from './selectView';\nimport { ErrFetch, SltMsg } from '../../constants';\n\nclass Select extends Component {\n  state = {\n    valueSlt: SltMsg,\n    slt: '',\n    points: [],\n    message: '',\n    reset: false,\n    firstLoad: true,\n  }\n\n  componentDidMount() {\n    const { config } = this.props;\n    const { point } = config;\n    const array = [];\n    if (point.name) {\n      array.push(point);\n      this.setState({\n        points: array,\n        valueSlt: point.name,\n        slt: point.name,\n      });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { config } = nextProps;\n    if (nextProps.config.reset !== prevState.reset) {\n      return {\n        valueSlt: SltMsg,\n        reset: config.reset,\n      };\n    }\n    return null;\n  }\n\n  handleChange = (event) => {    \n    const { points } = this.state;\n    const { config } = this.props;\n    const { savePoint } = config;\n    const { target } = event;\n    const { value } = target;\n    if ((value === 'closer')) {\n      this.setState({\n        valueSlt: SltMsg,\n        slt: SltMsg,\n        firstLoad: false,\n      });\n    } else if (value !== 'opener') {\n      this.setState({\n        valueSlt: value,\n        slt: value,\n        firstLoad: false,\n      });\n    } else {\n      this.setState({\n        valueSlt: SltMsg,\n        slt: 'opener',\n        firstLoad: false,\n      });\n    }\n    savePoint(points.filter(item => item.name === value)[0]);\n  }\n\n  handlePoints = () => {\n    getPoints()\n      .then(points => this.setState({ points }))\n      .catch(() => {\n        this.setState({\n          message: `${ErrFetch}`,\n        });\n      });\n  }\n\n  handleAnimation = () => {\n    this.setState({\n      message: '',\n    });\n  }\n\n  render() {\n    const { wifiStatus } = this.props;\n    const {\n      valueSlt, slt, message, points, firstLoad,\n    } = this.state;\n    const liClass = (slt === 'opener') ? 'select_items violet' : 'select_items';\n    let arrowClass = (slt === 'opener') ? 'arrow up' : 'arrow down';\n    if (firstLoad) arrowClass = 'arrow';\n    return (\n      <SelectView\n        liClass={liClass}\n        arrowClass={arrowClass}\n        message={message}\n        handleAnimation={this.handleAnimation}\n        valueSlt={valueSlt}\n        slt={slt}\n        points={points}\n        handleChange={this.handleChange}\n        wifiStatus={wifiStatus}\n        handlePoints={this.handlePoints}\n      />\n    );\n  }\n}\n\nSelect.propTypes = {\n  wifiStatus: PropTypes.bool.isRequired,\n  config: propConf.isRequired,\n};\n\nexport default props => (\n  <ConfigContext.Consumer>\n    {config => <Select {...props} config={config} />}\n  </ConfigContext.Consumer>\n);\n","import Select from './select';\n\nexport default Select;\n","import EnableWiFi from './enableWiFi';\n\nexport default EnableWiFi;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Checkbox from '../../components/checkbox';\nimport Select from '../../components/select';\nimport { enableWiFi } from '../../constants';\nimport './enableWiFi.css';\n\nconst EnableWiFi = (props) => {\n  const { setStatus, wifiStatus } = props;\n  return (\n    <div className=\"enable-wifi\">\n      <Checkbox description={enableWiFi} setStatus={setStatus} />\n      <div className=\"wireless-name\">\n        <Select wifiStatus={wifiStatus} />\n      </div>\n    </div>\n  );\n};\n\nEnableWiFi.propTypes = {\n  setStatus: PropTypes.func.isRequired,\n  wifiStatus: PropTypes.bool.isRequired,\n};\n\nexport default EnableWiFi;\n","import Wireless from './wireless';\n\nexport default Wireless;\n","import React, { Component } from 'react';\nimport Header from '../../components/header';\nimport Security from '../security';\nimport EnableWiFi from '../enableWiFi';\nimport NetworkSettings from '../networkSettings';\nimport { wifiH } from '../../constants';\nimport './wireless.css';\n\nclass Wireless extends Component {\n  state = {\n    wifi: false,\n    dhcpIP: true,\n    dhcpDNS: true,\n  }\n\n  setStatusWiFi = (wifi) => {\n    this.setState({\n      wifi,\n    });\n  }\n\n  setIPdhcp = (dhcpIP) => {\n    this.setState({\n      dhcpIP,\n    });\n  }\n\n  setDNSdhcp = (dhcpDNS) => {\n    this.setState({\n      dhcpDNS,\n    });\n  }\n\n  render() {\n    const { wifi, dhcpIP, dhcpDNS } = this.state;\n    return (\n      <div className=\"wireless\">\n        <Header header={wifiH} />\n        <EnableWiFi\n          wifiStatus={wifi}\n          setStatus={this.setStatusWiFi}\n        />\n        <Security\n          wifiStatus={wifi}\n        />\n        <NetworkSettings\n          network=\"wifi\"\n          wifiStatus={wifi}\n          dhcpIP={dhcpIP}\n          dhcpDNS={dhcpDNS}\n          setIPdhcp={this.setIPdhcp}\n          setDNSdhcp={this.setDNSdhcp}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Wireless;\n","import Button from './button';\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n\nconst Button = (props) => {\n  const { text, handleCancel } = props;\n  const textClass = text;\n  const btnClass = `button ${textClass}`.toLowerCase();\n  if (text === 'Save') {\n    return (\n      <button type=\"submit\" className={btnClass} form=\"data\">\n        {text}\n      </button>\n    );\n  }\n  return (\n    <button type=\"button\" className={btnClass} onClick={handleCancel}>\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.oneOf(['Save', 'Cancel']).isRequired,\n  handleCancel: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import Buttons from './buttons';\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../../components/button';\nimport './buttons.css';\n\nconst Buttons = (props) => {\n  const { handleCancel } = props;\n  return (\n    <div className=\"buttons\">\n      <Button text=\"Save\" handleCancel={handleCancel} />\n      <Button text=\"Cancel\" handleCancel={handleCancel} />\n    </div>\n  );\n};\n\nButtons.propTypes = {\n  handleCancel: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import Loader from './loader';\n\nexport default Loader;\n","import React from 'react';\nimport './loader.css';\n\nconst Loader = () => (\n  <div className=\"loading\">\n    <div className=\"lds-spinner\">\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n    <h2>Loading last configuration</h2>\n  </div>\n);\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport ConfigContext from './context';\nimport Ethernet from './sections/ethernet';\nimport Wireless from './sections/wireless';\nimport Buttons from './sections/buttons';\nimport Loader from './components/loader';\nimport Message from './components/message';\nimport { formObj, headers, linkSave } from './constants';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    config: '',\n    message: '',\n    savePoint: null,\n  }\n\n  componentDidMount() {\n    fetch(linkSave)\n      .then(response => response.json())\n      .then(data => data.data[0])\n      .then((data) => {\n        if (data) {\n          const obj = {};\n          const result = { ...obj, ...data };\n          delete result.url;\n          return result;\n        }\n        return formObj;\n      })\n      .then((data) => {\n        const config = {\n          ...data,\n          reset: false,\n          savePoint: this.saveSltPoint,\n        };\n        this.setState({\n          config,\n        });\n        this.saveSltPoint(data.point);\n      })\n      .catch((error) => {\n        const { message } = error;\n        console.log(`${message}`);\n      });\n  }\n\n  handleSubmit = (event) => {\n    const { config, savePoint } = this.state;\n    const { point, wifi } = event.target;\n    const obj = {};\n    const method = 'POST';\n    const sentObj = new FormData(event.target);\n    event.preventDefault();\n    if (wifi.value === 'true' && (point.value === '' || point.value === 'opener')) {\n      this.setState({\n        message: 'You need to select access point',\n      });\n      return null;\n    }\n    sentObj.forEach((value, key) => {\n      switch (value) {\n        case 'true':\n          obj[key] = true;\n          break;\n        case 'false':\n          obj[key] = false;\n          break;\n        default:\n          obj[key] = value;\n      }\n    });\n    const body = JSON.stringify({ ...formObj, ...obj, point: savePoint });\n    const saveConfig = {\n      ...config, ...formObj, ...obj, point: savePoint,\n    };\n    this.setState({\n      config: saveConfig,\n      message: 'Saving data',\n    });\n    fetch(linkSave, {\n      method,\n      headers,\n      body,\n    })\n      .then(res => res.json())\n      .catch((err) => {\n        console.log(`${err}`);\n        this.setState({\n          message: 'Form was send incorrectly. Try again.',\n        });\n      });\n    return null;\n  };\n\n  handleCancel = (event) => {\n    event.preventDefault();\n    const { config } = this.state;\n    const obj = { ...config, reset: !config.reset };\n    this.setState({\n      config: obj,\n      message: 'Cancel unsaved data',\n    });\n  }\n\n  handleAnimation = () => {\n    this.setState({\n      message: '',\n    });\n  }\n\n  saveSltPoint = (point) => {\n    this.setState({\n      savePoint: point,\n    });\n  }\n\n  render() {\n    const { config, message } = this.state;\n    return (\n      <ConfigContext.Provider value={config}>\n        <form className=\"App\" id=\"data\" onSubmit={this.handleSubmit}>\n          {message && (\n            <Message\n              message={message}\n              handleAnimation={this.handleAnimation}\n            />\n          )}\n          {!config && <Loader />}\n          {config && <Ethernet />}\n          {config && <Wireless />}\n          {config && <Buttons handleCancel={this.handleCancel} />}\n        </form>\n      </ConfigContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}